name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test-macos:
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build application
        run: yarn build

      - name: Test UV installation flow (before installing uv)
        run: yarn playwright test uv-installation.ci.spec.ts
        env:
          CI: true
          NODE_ENV: test
          RUN_CI_TESTS: true

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Verify uv installation
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          uv --version

      - name: Run tests
        run: yarn test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-macos
          path: |
            test-results/
            playwright-report/
          retention-days: 7

  test-windows:
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Set CI environment flags
        shell: pwsh
        run: |
          echo "ELECTRON_NO_ATTACH_CONSOLE=1" | Out-File -Append -FilePath $env:GITHUB_ENV

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        env:
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Build application
        run: yarn build
        env:
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Test UV installation flow (before installing uv)
        shell: pwsh
        run: yarn playwright test uv-installation.ci.spec.ts
        env:
          CI: true
          NODE_ENV: test
          RUN_CI_TESTS: true
          ELECTRON_DISABLE_SANDBOX: 1

      - name: Install uv
        run: |
          irm https://astral.sh/uv/install.ps1 | iex
          echo "$env:USERPROFILE\.local\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: powershell

      - name: Verify uv installation
        run: |
          $env:PATH = "$env:USERPROFILE\.local\bin;$env:PATH"
          uv --version
        shell: powershell

      - name: Run tests
        shell: pwsh
        run: yarn test
        env:
          ELECTRON_DISABLE_SANDBOX: 1
          NODE_OPTIONS: --max-old-space-size=4096
          PYTHONUNBUFFERED: 1

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-windows
          path: |
            test-results/
            playwright-report/
          retention-days: 7

  test-linux:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install runtime dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb dbus-x11 libnss3 libasound2t64 \
            libxkbcommon0 libxrandr2 libgbm1 libgtk-3-0 \
            fonts-liberation fonts-noto-color-emoji procps

      - name: Start Xvfb
        run: |
          Xvfb :99 -screen 0 1920x1080x24 -ac +render +extension RANDR +extension GLX -noreset &
          echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Set CI environment flags
        run: |
          echo "ELECTRON_DISABLE_SANDBOX=1" >> $GITHUB_ENV
          echo "LIBGL_ALWAYS_SOFTWARE=1" >> $GITHUB_ENV

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        env:
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Build application
        run: yarn build
        env:
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Test UV installation flow (before installing uv)
        run: yarn playwright test uv-installation.ci.spec.ts
        env:
          CI: true
          NODE_ENV: test
          RUN_CI_TESTS: true

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Verify uv installation
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          uv --version

      - name: Run tests
        run: yarn test
        env:
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-linux
          path: |
            test-results/
            playwright-report/
          retention-days: 7
